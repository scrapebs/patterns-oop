Фасад — это структурный паттерн, который предоставляет простой (но урезанный) интерфейс к
сложной системе объектов, библиотеке или фреймворку.

Кроме того, что Фасад позволяет снизить общую сложность программы,
 он также помогает вынести код, зависимый от внешней системы в единственное место.

 Применимость: Паттерн часто встречается в клиентских приложениях, написанных на Java,
 которые используют классы-фасады для упрощения работы со сложными библиотеки или API.

 Примеры Фасадов в стандартных библиотеках Java:

 javax.faces.context.FacesContext использует «под капотом» классы LifeCycle,  ViewHandler, NavigationHandler и многие другие,
 но клиенты об этом даже не знают (что не мешает заменить эти классы другими с помощью инъекций).

 javax.faces.context.ExternalContext использует внутри классы ServletContext,  HttpSession,
 HttpServletRequest, HttpServletResponse, и так далее.

 Признаки применения паттерна: Фасад угадывается в классе, который имеет простой интерфейс,
 но делегирует основную часть работы другим классам. Чаще всего, фасады сами следят за жизненным циклом объектов сложной системы.

 Простой интерфейс к сложной библиотеке видеоконвертации
 В этом примере Фасад упрощает работу клиента со сложной библиотекой видеоконвертации.

 Фасад предоставляет пользователю лишь один простой метод, скрывая за собой целую систему с видеокодеками,
 аудиомикшерами и другими не менее сложными объектами.